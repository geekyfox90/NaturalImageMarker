pipeline {
    agent {
        label "jenkins-slave-argo-qmake"
    }
    options {
        buildDiscarder(logRotator(numToKeepStr: '10'))
    }
    parameters {
        booleanParam(name: 'RELEASE',
            defaultValue: false,
            description: 'Create a Release')
    }
    triggers { pollSCM('* * * * *') }    
    stages {

        stage("Get Third Parties StandAlone") {
             steps {
                 script {
                     BRANCH = BRANCH_NAME.replace('/','_')
                     dir("StandAlone") {
                        version = getVersion()
                     }      
                 }
                 withCredentials([string(credentialsId: 'artifactoryApiKey', variable: 'apiKey')]) {
                    dir("StandAlone"){
                        installRemaken(params.RELEASE,BRANCH,apiKey)
                    }
                 }
             }
        }   

        stage("Build StandAlone") {
             steps {
                 dir("StandAlone") {
                     build("")
                 }
             }
        }

        stage("Build Debug StandAlone") {
            when {
                expression { params.RELEASE == true }
            }            
             steps {
                 dir("StandAlone") {
                     build("debug")
                 }
             }
        }   

        stage("Get Third Parties Multithread") {
             steps {
                 script {
                     BRANCH = BRANCH_NAME.replace('/','_')
                     dir("Multithread") {
                        version = getVersion()
                     }      
                 }
                 withCredentials([string(credentialsId: 'artifactoryApiKey', variable: 'apiKey')]) {
                    dir("Multithread"){
                        installRemaken(params.RELEASE,BRANCH,apiKey)
                    }
                 }
             }
        }          

   
        stage("Build Multithread") {
             steps {
                 dir("Multithread") {
                     build("")
                 }
             }
        }

        stage("Build Debug Multithread") {
            when {
                expression { params.RELEASE == true }
            }            
             steps {
                 dir("Multithread") {
                     build("debug")
                 }
             }
        }

        stage("Generate artifacts") {
            steps {
                script {
                     prepareRelease("SolARBuild","linux-gcc","PipelineNaturalImageMarker")               
                }
            }
        }  

        // Trigger only if not a RELEASE
        stage("Upload to Artifactory") {
            when {
                expression { params.RELEASE == false }
            }
            steps {
                withCredentials([usernamePassword(credentialsId: 'bc6e150e-ede8-4e35-8af4-0f037edee8ac', passwordVariable: 'PASSWORD', usernameVariable: 'USERNAME')]) {
                    uploadArchive(BRANCH,"PipelineNaturalImageMarker/${version}/linux","${WORKSPACE}/artifactory/x86_64_shared_release/PipelineNaturalImageMarker_${version}_x86_64_shared_release.zip",USERNAME,PASSWORD)
                }
            }
        }         

        stage("Release") {
            when {
                expression { params.RELEASE == true }
            }
            steps {                               
                withCredentials([string(credentialsId: 'github-token', variable: 'token')]) {
                    release("NaturalImageMarker","PipelineNaturalImageMarker/${version}/linux","PipelineNaturalImageMarker Version ${version} for Linux","${WORKSPACE}/artifactory/x86_64_shared_release/PipelineNaturalImageMarker_${version}_x86_64_shared_release.zip ${WORKSPACE}/artifactory/x86_64_shared_debug/PipelineNaturalImageMarker_${version}_x86_64_shared_debug.zip",token);
                }
            }   
        }
}
}